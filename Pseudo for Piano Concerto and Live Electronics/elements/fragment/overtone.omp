; OM File Header - Saved 2024/08/20 22:49:52
; (7.04 :patc (om-make-point 405.228515625D0 10) (om-make-point 217 50) (om-make-point 500 400) "" 183 0 "2024/07/25 23:00:33" "2024/07/26 23:48:32")
; End File Header
(in-package :om)(load-lib-for (quote nil))(setf *om-current-persistent* (om-load-patch1 "overtone" (quote ((let ((box (om-load-boxcall (quote lispfun) "TIE 2" (quote tie) (quote ((om-load-inputfun (quote input-funbox) "GRAP-RYTH-NOTE" "GRAP-RYTH-NOTE" nil))) (om-make-point 112 465) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote lispfun) "TIE" (quote tie) (quote ((om-load-inputfun (quote input-funbox) "GRAP-RYTH-NOTE" "GRAP-RYTH-NOTE" nil))) (om-make-point 92 445) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxout "output" 0 (om-make-point 169 212) (quote ((om-load-inputfun (quote input-funbox) "" "out" nil))) nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input 3" 2 (om-make-point 235 47) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input 2" 1 (om-make-point 195 47) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxin "input" 0 (om-make-point 164 0) "" nil nil nil))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "MC->F" (quote mc->f) (quote ((om-load-inputfun (quote input-funbox) "pitch or pitch list (midicents)" "MIDICS?" 6000))) (om-make-point 159 59) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "F->MC" (quote f->mc) (quote ((om-load-inputfun (quote input-funbox) "frequency (Hz)" "FREQ" 440))) (om-make-point 172 165) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box) (let ((box (om-load-boxcall (quote genfun) "INHARM-SER" (quote inharm-ser) (quote ((om-load-inputfun (quote input-funbox) "begin" "BEGIN" 1) (om-load-inputfun (quote input-funbox) "distortion" "DIST" 1) (om-load-inputfun (quote input-funbox) "number of elements (partials)" "NPART" 1))) (om-make-point 161 106) nil nil nil nil 1))) (when (fboundp (quote set-active)) (set-active box nil)) box))) (quote ((7 0 2 0 nil 0) (5 0 6 0 nil 0) (8 0 7 0 nil 0) (6 0 8 0 nil 0) (4 0 8 1 nil 0) (3 0 8 2 nil 0))) nil 7.03))
